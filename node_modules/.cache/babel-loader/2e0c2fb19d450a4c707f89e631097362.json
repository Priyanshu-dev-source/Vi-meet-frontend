{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory(require(\"react\"));else if (typeof define === 'function' && define.amd) define([\"react\"], factory);else if (typeof exports === 'object') exports[\"Webcam\"] = factory(require(\"react\"));else root[\"Webcam\"] = factory(root[\"React\"]);\n})(this, function (__WEBPACK_EXTERNAL_MODULE_react__) {\n  return /******/function (modules) {\n    // webpackBootstrap\n    /******/ // The module cache\n    /******/\n    var installedModules = {};\n    /******/\n    /******/ // The require function\n    /******/\n    function __webpack_require__(moduleId) {\n      /******/\n      /******/ // Check if module is in cache\n      /******/if (installedModules[moduleId]) {\n        /******/return installedModules[moduleId].exports;\n        /******/\n      }\n      /******/ // Create a new module (and put it into the cache)\n      /******/\n      var module = installedModules[moduleId] = {\n        /******/i: moduleId,\n        /******/l: false,\n        /******/exports: {}\n        /******/\n      };\n      /******/\n      /******/ // Execute the module function\n      /******/\n      modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n      /******/\n      /******/ // Flag the module as loaded\n      /******/\n      module.l = true;\n      /******/\n      /******/ // Return the exports of the module\n      /******/\n      return module.exports;\n      /******/\n    }\n    /******/\n    /******/\n    /******/ // expose the modules object (__webpack_modules__)\n    /******/\n    __webpack_require__.m = modules;\n    /******/\n    /******/ // expose the module cache\n    /******/\n    __webpack_require__.c = installedModules;\n    /******/\n    /******/ // define getter function for harmony exports\n    /******/\n    __webpack_require__.d = function (exports, name, getter) {\n      /******/if (!__webpack_require__.o(exports, name)) {\n        /******/Object.defineProperty(exports, name, {\n          enumerable: true,\n          get: getter\n        });\n        /******/\n      }\n      /******/\n    };\n    /******/\n    /******/ // define __esModule on exports\n    /******/\n    __webpack_require__.r = function (exports) {\n      /******/if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n        /******/Object.defineProperty(exports, Symbol.toStringTag, {\n          value: 'Module'\n        });\n        /******/\n      }\n      /******/\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n      /******/\n    };\n    /******/\n    /******/ // create a fake namespace object\n    /******/ // mode & 1: value is a module id, require it\n    /******/ // mode & 2: merge all properties of value into the ns\n    /******/ // mode & 4: return value when already ns object\n    /******/ // mode & 8|1: behave like require\n    /******/\n    __webpack_require__.t = function (value, mode) {\n      /******/if (mode & 1) value = __webpack_require__(value);\n      /******/\n      if (mode & 8) return value;\n      /******/\n      if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n      /******/\n      var ns = Object.create(null);\n      /******/\n      __webpack_require__.r(ns);\n      /******/\n      Object.defineProperty(ns, 'default', {\n        enumerable: true,\n        value: value\n      });\n      /******/\n      if (mode & 2 && typeof value != 'string') for (var key in value) __webpack_require__.d(ns, key, function (key) {\n        return value[key];\n      }.bind(null, key));\n      /******/\n      return ns;\n      /******/\n    };\n    /******/\n    /******/ // getDefaultExport function for compatibility with non-harmony modules\n    /******/\n    __webpack_require__.n = function (module) {\n      /******/var getter = module && module.__esModule ? /******/function getDefault() {\n        return module['default'];\n      } : /******/function getModuleExports() {\n        return module;\n      };\n      /******/\n      __webpack_require__.d(getter, 'a', getter);\n      /******/\n      return getter;\n      /******/\n    };\n    /******/\n    /******/ // Object.prototype.hasOwnProperty.call\n    /******/\n    __webpack_require__.o = function (object, property) {\n      return Object.prototype.hasOwnProperty.call(object, property);\n    };\n    /******/\n    /******/ // __webpack_public_path__\n    /******/\n    __webpack_require__.p = \"\";\n    /******/\n    /******/\n    /******/ // Load entry module and return exports\n    /******/\n    return __webpack_require__(__webpack_require__.s = \"./src/react-webcam.tsx\");\n    /******/\n  }\n  /************************************************************************/\n  /******/({\n    /***/\"./src/react-webcam.tsx\": (\n    /*!******************************!*\\\n      !*** ./src/react-webcam.tsx ***!\n      \\******************************/\n    /*! exports provided: default */\n    /***/\n    function (module, __webpack_exports__, __webpack_require__) {\n      \"use strict\";\n\n      __webpack_require__.r(__webpack_exports__);\n      /* harmony import */\n      var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */\"react\");\n      /* harmony import */\n      var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n      var __extends = undefined && undefined.__extends || function () {\n        var extendStatics = function (d, b) {\n          extendStatics = Object.setPrototypeOf || {\n            __proto__: []\n          } instanceof Array && function (d, b) {\n            d.__proto__ = b;\n          } || function (d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n          };\n          return extendStatics(d, b);\n        };\n        return function (d, b) {\n          extendStatics(d, b);\n          function __() {\n            this.constructor = d;\n          }\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n      var __assign = undefined && undefined.__assign || function () {\n        __assign = Object.assign || function (t) {\n          for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n          }\n          return t;\n        };\n        return __assign.apply(this, arguments);\n      };\n      var __rest = undefined && undefined.__rest || function (s, e) {\n        var t = {};\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n        }\n        return t;\n      };\n\n      // polyfill based on https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n      (function polyfillGetUserMedia() {\n        if (typeof window === 'undefined') {\n          return;\n        }\n        // Older browsers might not implement mediaDevices at all, so we set an empty object first\n        if (navigator.mediaDevices === undefined) {\n          navigator.mediaDevices = {};\n        }\n        // Some browsers partially implement mediaDevices. We can't just assign an object\n        // with getUserMedia as it would overwrite existing properties.\n        // Here, we will just add the getUserMedia property if it's missing.\n        if (navigator.mediaDevices.getUserMedia === undefined) {\n          navigator.mediaDevices.getUserMedia = function (constraints) {\n            // First get ahold of the legacy getUserMedia, if present\n            var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n            // Some browsers just don't implement it - return a rejected promise with an error\n            // to keep a consistent interface\n            if (!getUserMedia) {\n              return Promise.reject(new Error(\"getUserMedia is not implemented in this browser\"));\n            }\n            // Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\n            return new Promise(function (resolve, reject) {\n              getUserMedia.call(navigator, constraints, resolve, reject);\n            });\n          };\n        }\n      })();\n      function hasGetUserMedia() {\n        return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);\n      }\n      var Webcam = /** @class */function (_super) {\n        __extends(Webcam, _super);\n        function Webcam(props) {\n          var _this = _super.call(this, props) || this;\n          _this.canvas = null;\n          _this.ctx = null;\n          _this.requestUserMediaId = 0;\n          _this.unmounted = false;\n          _this.state = {\n            hasUserMedia: false\n          };\n          return _this;\n        }\n        Webcam.prototype.componentDidMount = function () {\n          var _a = this,\n            state = _a.state,\n            props = _a.props;\n          this.unmounted = false;\n          if (!hasGetUserMedia()) {\n            props.onUserMediaError(\"getUserMedia not supported\");\n            return;\n          }\n          if (!state.hasUserMedia) {\n            this.requestUserMedia();\n          }\n          if (props.children && typeof props.children != 'function') {\n            console.warn(\"children must be a function\");\n          }\n        };\n        Webcam.prototype.componentDidUpdate = function (nextProps) {\n          var props = this.props;\n          if (!hasGetUserMedia()) {\n            props.onUserMediaError(\"getUserMedia not supported\");\n            return;\n          }\n          var audioConstraintsChanged = JSON.stringify(nextProps.audioConstraints) !== JSON.stringify(props.audioConstraints);\n          var videoConstraintsChanged = JSON.stringify(nextProps.videoConstraints) !== JSON.stringify(props.videoConstraints);\n          var minScreenshotWidthChanged = nextProps.minScreenshotWidth !== props.minScreenshotWidth;\n          var minScreenshotHeightChanged = nextProps.minScreenshotHeight !== props.minScreenshotHeight;\n          if (videoConstraintsChanged || minScreenshotWidthChanged || minScreenshotHeightChanged) {\n            this.canvas = null;\n            this.ctx = null;\n          }\n          if (audioConstraintsChanged || videoConstraintsChanged) {\n            this.stopAndCleanup();\n            this.requestUserMedia();\n          }\n        };\n        Webcam.prototype.componentWillUnmount = function () {\n          this.unmounted = true;\n          this.stopAndCleanup();\n        };\n        Webcam.stopMediaStream = function (stream) {\n          if (stream) {\n            if (stream.getVideoTracks && stream.getAudioTracks) {\n              stream.getVideoTracks().map(function (track) {\n                stream.removeTrack(track);\n                track.stop();\n              });\n              stream.getAudioTracks().map(function (track) {\n                stream.removeTrack(track);\n                track.stop();\n              });\n            } else {\n              stream.stop();\n            }\n          }\n        };\n        Webcam.prototype.stopAndCleanup = function () {\n          var state = this.state;\n          if (state.hasUserMedia) {\n            Webcam.stopMediaStream(this.stream);\n            if (state.src) {\n              window.URL.revokeObjectURL(state.src);\n            }\n          }\n        };\n        Webcam.prototype.getScreenshot = function (screenshotDimensions) {\n          var _a = this,\n            state = _a.state,\n            props = _a.props;\n          if (!state.hasUserMedia) return null;\n          var canvas = this.getCanvas(screenshotDimensions);\n          return canvas && canvas.toDataURL(props.screenshotFormat, props.screenshotQuality);\n        };\n        Webcam.prototype.getCanvas = function (screenshotDimensions) {\n          var _a = this,\n            state = _a.state,\n            props = _a.props;\n          if (!this.video) {\n            return null;\n          }\n          if (!state.hasUserMedia || !this.video.videoHeight) return null;\n          if (!this.ctx) {\n            var canvasWidth = this.video.videoWidth;\n            var canvasHeight = this.video.videoHeight;\n            if (!this.props.forceScreenshotSourceSize) {\n              var aspectRatio = canvasWidth / canvasHeight;\n              canvasWidth = props.minScreenshotWidth || this.video.clientWidth;\n              canvasHeight = canvasWidth / aspectRatio;\n              if (props.minScreenshotHeight && canvasHeight < props.minScreenshotHeight) {\n                canvasHeight = props.minScreenshotHeight;\n                canvasWidth = canvasHeight * aspectRatio;\n              }\n            }\n            this.canvas = document.createElement(\"canvas\");\n            this.canvas.width = (screenshotDimensions === null || screenshotDimensions === void 0 ? void 0 : screenshotDimensions.width) || canvasWidth;\n            this.canvas.height = (screenshotDimensions === null || screenshotDimensions === void 0 ? void 0 : screenshotDimensions.height) || canvasHeight;\n            this.ctx = this.canvas.getContext(\"2d\");\n          }\n          var _b = this,\n            ctx = _b.ctx,\n            canvas = _b.canvas;\n          if (ctx && canvas) {\n            // adjust the height and width of the canvas to the given dimensions\n            canvas.width = (screenshotDimensions === null || screenshotDimensions === void 0 ? void 0 : screenshotDimensions.width) || canvas.width;\n            canvas.height = (screenshotDimensions === null || screenshotDimensions === void 0 ? void 0 : screenshotDimensions.height) || canvas.height;\n            // mirror the screenshot\n            if (props.mirrored) {\n              ctx.translate(canvas.width, 0);\n              ctx.scale(-1, 1);\n            }\n            ctx.imageSmoothingEnabled = props.imageSmoothing;\n            ctx.drawImage(this.video, 0, 0, (screenshotDimensions === null || screenshotDimensions === void 0 ? void 0 : screenshotDimensions.width) || canvas.width, (screenshotDimensions === null || screenshotDimensions === void 0 ? void 0 : screenshotDimensions.height) || canvas.height);\n            // invert mirroring\n            if (props.mirrored) {\n              ctx.scale(-1, 1);\n              ctx.translate(-canvas.width, 0);\n            }\n          }\n          return canvas;\n        };\n        Webcam.prototype.requestUserMedia = function () {\n          var _this = this;\n          var props = this.props;\n          var sourceSelected = function (audioConstraints, videoConstraints) {\n            var constraints = {\n              video: typeof videoConstraints !== \"undefined\" ? videoConstraints : true\n            };\n            if (props.audio) {\n              constraints.audio = typeof audioConstraints !== \"undefined\" ? audioConstraints : true;\n            }\n            _this.requestUserMediaId++;\n            var myRequestUserMediaId = _this.requestUserMediaId;\n            navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n              if (_this.unmounted || myRequestUserMediaId !== _this.requestUserMediaId) {\n                Webcam.stopMediaStream(stream);\n              } else {\n                _this.handleUserMedia(null, stream);\n              }\n            }).catch(function (e) {\n              _this.handleUserMedia(e);\n            });\n          };\n          if (\"mediaDevices\" in navigator) {\n            sourceSelected(props.audioConstraints, props.videoConstraints);\n          } else {\n            var optionalSource_1 = function (id) {\n              return {\n                optional: [{\n                  sourceId: id\n                }]\n              };\n            };\n            var constraintToSourceId_1 = function (constraint) {\n              var deviceId = constraint.deviceId;\n              if (typeof deviceId === \"string\") {\n                return deviceId;\n              }\n              if (Array.isArray(deviceId) && deviceId.length > 0) {\n                return deviceId[0];\n              }\n              if (typeof deviceId === \"object\" && deviceId.ideal) {\n                return deviceId.ideal;\n              }\n              return null;\n            };\n            // @ts-ignore: deprecated api\n            MediaStreamTrack.getSources(function (sources) {\n              var audioSource = null;\n              var videoSource = null;\n              sources.forEach(function (source) {\n                if (source.kind === \"audio\") {\n                  audioSource = source.id;\n                } else if (source.kind === \"video\") {\n                  videoSource = source.id;\n                }\n              });\n              var audioSourceId = constraintToSourceId_1(props.audioConstraints);\n              if (audioSourceId) {\n                audioSource = audioSourceId;\n              }\n              var videoSourceId = constraintToSourceId_1(props.videoConstraints);\n              if (videoSourceId) {\n                videoSource = videoSourceId;\n              }\n              sourceSelected(optionalSource_1(audioSource), optionalSource_1(videoSource));\n            });\n          }\n        };\n        Webcam.prototype.handleUserMedia = function (err, stream) {\n          var props = this.props;\n          if (err || !stream) {\n            this.setState({\n              hasUserMedia: false\n            });\n            props.onUserMediaError(err);\n            return;\n          }\n          this.stream = stream;\n          try {\n            if (this.video) {\n              this.video.srcObject = stream;\n            }\n            this.setState({\n              hasUserMedia: true\n            });\n          } catch (error) {\n            this.setState({\n              hasUserMedia: true,\n              src: window.URL.createObjectURL(stream)\n            });\n          }\n          props.onUserMedia(stream);\n        };\n        Webcam.prototype.render = function () {\n          var _this = this;\n          var _a = this,\n            state = _a.state,\n            props = _a.props;\n          var audio = props.audio,\n            forceScreenshotSourceSize = props.forceScreenshotSourceSize,\n            disablePictureInPicture = props.disablePictureInPicture,\n            onUserMedia = props.onUserMedia,\n            onUserMediaError = props.onUserMediaError,\n            screenshotFormat = props.screenshotFormat,\n            screenshotQuality = props.screenshotQuality,\n            minScreenshotWidth = props.minScreenshotWidth,\n            minScreenshotHeight = props.minScreenshotHeight,\n            audioConstraints = props.audioConstraints,\n            videoConstraints = props.videoConstraints,\n            imageSmoothing = props.imageSmoothing,\n            mirrored = props.mirrored,\n            _b = props.style,\n            style = _b === void 0 ? {} : _b,\n            children = props.children,\n            rest = __rest(props, [\"audio\", \"forceScreenshotSourceSize\", \"disablePictureInPicture\", \"onUserMedia\", \"onUserMediaError\", \"screenshotFormat\", \"screenshotQuality\", \"minScreenshotWidth\", \"minScreenshotHeight\", \"audioConstraints\", \"videoConstraints\", \"imageSmoothing\", \"mirrored\", \"style\", \"children\"]);\n          var videoStyle = mirrored ? __assign(__assign({}, style), {\n            transform: (style.transform || \"\") + \" scaleX(-1)\"\n          }) : style;\n          var childrenProps = {\n            getScreenshot: this.getScreenshot.bind(this)\n          };\n          return react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](react__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], null, react__WEBPACK_IMPORTED_MODULE_0__[\"createElement\"](\"video\", __assign({\n            autoPlay: true,\n            disablePictureInPicture: disablePictureInPicture,\n            src: state.src,\n            muted: !audio,\n            playsInline: true,\n            ref: function (ref) {\n              _this.video = ref;\n            },\n            style: videoStyle\n          }, rest)), children && children(childrenProps));\n        };\n        Webcam.defaultProps = {\n          audio: false,\n          disablePictureInPicture: false,\n          forceScreenshotSourceSize: false,\n          imageSmoothing: true,\n          mirrored: false,\n          onUserMedia: function () {\n            return undefined;\n          },\n          onUserMediaError: function () {\n            return undefined;\n          },\n          screenshotFormat: \"image/webp\",\n          screenshotQuality: 0.92\n        };\n        return Webcam;\n      }(react__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n      /* harmony default export */\n      __webpack_exports__[\"default\"] = Webcam;\n\n      /***/\n    }),\n    /***/\"react\": (\n    /*!**************************************************************************************!*\\\n      !*** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"} ***!\n      \\**************************************************************************************/\n    /*! no static exports found */\n    /***/\n    function (module, exports) {\n      module.exports = __WEBPACK_EXTERNAL_MODULE_react__;\n\n      /***/\n    })\n\n    /******/\n  })[\"default\"];\n});","map":null,"metadata":{},"sourceType":"script"}